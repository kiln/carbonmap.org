#!/bin/bash

set -ex

cartograms_bin=/usr/local/cartograms/bin

all_datasets="Continents EmissionsChange CO2perCapita GDPperCapita PopulationGrowth"

(
    echo "// This file is auto-generated. Please do not edit."
    echo "// Generated at $(date)"
    echo
    echo "carbonmap_shading = {};"
    
    for f in $all_datasets
    do
        if [ -e data/Shading/With\ alpha-2/"$f".csv ]
        then
            echo "/* $f */"
            bin/shading-css --class="shading-$f" --shading data/Shading/With\ alpha-2/"$f".shading.csv --data data/Shading/With\ alpha-2/"$f".csv
            bin/shading-css --shading data/Shading/With\ alpha-2/"$f".shading.csv --data data/Shading/With\ alpha-2/"$f".csv > data/Shading/CSS/"$f".css
        fi
    done
) > site/shading.css

(
    echo "/* This file is auto-generated. Please do not edit. */"
    echo "/* Generated at $(date) */"
    echo
    
    for f in $all_datasets
    do
        echo -n "carbonmap_shading.$f = "
        bin/shading-js data/Shading/With\ alpha-2/"$f".shading.csv
        echo ';'

        echo -n "carbonmap_values.$f = "
        "$cartograms_bin"/csv-to-json --key Alpha-2 --exclude=",EU" --value "$("$cartograms_bin"/csv-header --index=0 data/Shading/With\ alpha-2/"$f".shading.csv)" --type=float --format="{:,.1f}" data/Shading/With\ alpha-2/$f.csv
        echo ';'

        # You can make a (presumably empty) file like Continents.no-rank
        # to indicate that it doesnâ€™t make sense to assign ranks to a dataset.
        if [ ! -e data/Shading/With\ alpha-2/"$f".no-rank ]
        then
            echo -n "carbonmap_rank.$f = "
            "$cartograms_bin"/csv-to-json --rank --desc --key Alpha-2 --exclude=",EU" --value "$("$cartograms_bin"/csv-header --index=0 data/Shading/With\ alpha-2/"$f".shading.csv)" --type=float data/Shading/With\ alpha-2/$f.csv
            echo ';'
        fi
    done
) > site/data.shading.js

# Generate a spreadsheet showing all the shading data
(
    echo -n "Alpha-2 ISO country code,Country name"
    for f in $all_datasets
    do
        echo -n ",$f"
        if head -1 "data/Shading/With alpha-2/$f.csv" | egrep -q ',Notes(,|$)'
        then
            echo -n ",($f notes)"
            eval has_notes_$f=true
        else
            eval has_notes_$f=false
        fi
    done
    echo
    
    echo -n ","
    for f in $all_datasets
    do
        col="$("$cartograms_bin"/csv-header --index=0 data/Shading/With\ alpha-2/"$f".shading.csv)"
        echo -n ",\"$col\""
        eval \${has_notes_$f} && echo ,
    done
    echo

    # Generate a YAML configuration, and feed it to csv-join
    (
        echo "key: Alpha-2"
        echo "files:"
        echo "- file: /usr/local/cartograms/data/continents.csv"
        echo "  key: iso2"
        echo "  values: [name]"
        for f in $all_datasets
        do
            col="$("$cartograms_bin"/csv-header --index=0 data/Shading/With\ alpha-2/"$f".shading.csv)"
            eval has_notes=\${has_notes_$f}
            
            echo "- file: data/Shading/With alpha-2/$f.csv"
            echo "  values:"
            echo "  - $col"
            if $has_notes
            then
                echo "  - Notes"
            fi
        done
    ) | "$cartograms_bin"/csv-join
) > site/shading-data.csv
